<?php declare(strict_types=1);

namespace Reconmap\Controllers\Targets;

use League\Plates\Engine;
use Psr\Http\Message\ServerRequestInterface;
use Reconmap\Controllers\Vulnerabilities\CreateVulnerabilityController;
use Reconmap\ControllerTestCase;
use Reconmap\Repositories\VulnerabilityRepository;

class CreateVulnerabilityControllerTest extends ControllerTestCase
{

    public function testSuccess(): void
    {
        $request = $this->createMock(ServerRequestInterface::class);
        $request->expects($this->once())
            ->method('getAttribute')
            ->with('userId')
            ->willReturn(1);
        $request->expects($this->once())
            ->method('getBody')
            ->willReturn(json_encode(['project_id' => 1, 'summary' => 'SQL injection', 'risk' => 'low']));

        $mockVulnerabilityRepository = $this->createPartialMock(VulnerabilityRepository::class, ['insert']);
        $mockVulnerabilityRepository->expects($this->once())
            ->method('insert')
            ->with(1, (object)['project_id' => 1, 'summary' => 'SQL injection', 'risk' => 'low'])
            ->willReturn(5);

        $controller = $this->injectController(new CreateVulnerabilityController($mockVulnerabilityRepository));
        $response = $controller($request);
        $this->assertGreaterThan(0, $response['success']);
    }
}
