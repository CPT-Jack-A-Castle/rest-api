<?php declare(strict_types=1);

namespace Reconmap\Repositories\SearchCriterias;

use Ponup\SqlBuilders\SearchCriteria;

class VulnerabilitySearchCriteria extends SearchCriteria
{
    public function addUserCriterion(int $userId)
    {
        $this->addCriterion('? IN (SELECT user_id FROM project_user WHERE project_id = p.id)', [$userId]);
    }

    public function addKeywordsCriterion(string $keywords)
    {
        $keywordsLike = "%$keywords%";
        $this->addCriterion('(v.summary LIKE ? OR v.description LIKE ? OR JSON_CONTAINS(v.tags, ?))', [$keywordsLike, $keywordsLike, "\"$keywords\""]);
    }

    public function addTemplateCriterion(bool $isTemplate)
    {
        $this->addCriterion('v.is_template = ?', [$isTemplate]);
    }

    public function addIsNotTemplateCriterion()
    {
        $this->addTemplateCriterion(false);
    }

    public function addIsTemplateCriterion()
    {
        $this->addTemplateCriterion(true);
    }

    public function addProjectCriterion(int $projectId)
    {
        $this->addCriterion('v.project_id = ?', [$projectId]);
    }

    public function addTargetCriterion(int $targetId)
    {
        $this->addCriterion('v.target_id = ?', [$targetId]);
    }

    public function addPublicVisibilityCriterion()
    {
        $this->addCriterion('v.visibility = "public"');
    }

    public function addRiskCriterion(string $risk)
    {
        $this->addCriterion('v.risk = ?', [$risk]);
    }

    public function addCategoryCriterion(int $categoryId)
    {
        $this->addCriterion('v.category_id = ?', [$categoryId]);
    }

    public function addStatusCriterion(string $status)
    {
        $this->addCriterion('v.status = ?', [$status]);
    }
}
